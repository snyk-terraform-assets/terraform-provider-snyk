# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    environment: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - run: mkdir -p "$HOME/.terraform.d/plugin-cache"
      - name: Update terraform CLI config for snyk provider local lookup
        run: |
          cat <<EOF > ~/.terraformrc
          plugin_cache_dir   = "$HOME/.terraform.d/plugin-cache"
          provider_installation {
          
            dev_overrides {
            "registry.terraform.io/snyk-terraform-assets/snyk" = "$GITHUB_WORKSPACE"
          }
          
            direct {}
          }
          EOF
      - run: cat ~/.terraformrc
      - run: make build
      - run: make testacc
        timeout-minutes: 15
        env:
          TEST_SNYK_API: ${{ secrets.TEST_SNYK_API }}
          TEST_SNYK_TOKEN: ${{ secrets.TEST_SNYK_TOKEN }}
          TEST_SNYK_ORG_ID: ${{ secrets.TEST_SNYK_ORG_ID }}
          TEST_SNYK_GROUP_ID: ${{ secrets.TEST_SNYK_GROUP_ID }}
          TEST_SNYK_ROLE_ID: ${{ secrets.TEST_SNYK_ROLE_ID }}
          TEST_AWS_ARN: ${{ secrets.TEST_AWS_ARN }}
